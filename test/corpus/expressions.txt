=================
member expression
=================

some.path.T;

---

(module
  (member_expr
    object: (member_expr
      object: (identifier)
      field: (identifier))
    field: (identifier)))

==============
new expression
==============

new some.path.T();

---

(module
  (new_expr
    type: (type_path
      package: (package_path
        (pack)
        (pack))
      (type_name))
    args: (arg_list)))

=======================
array access expression
=======================

a[0];
a[b];
a[f()];

---

(module
  (array_access
    (identifier)
    (int))
  (array_access
    (identifier)
    (identifier))
  (array_access
    (identifier)
    (call_expr
      (identifier)
      (arg_list))))

========
for loop
========

for (i in 0...10) sum += i;

---

(module
  (for_stmt
    element: (identifier)
    iterable: (range
      (int)
      (int))
    (assignment_expr
      left: (identifier)
      right: (identifier))))
  
=============================
for loop, key-value iteration
=============================

for (key => value in collection) key;

---

(module
  (for_stmt
    key: (identifier)
    value: (identifier)
    iterable: (identifier)
    (identifier)))
