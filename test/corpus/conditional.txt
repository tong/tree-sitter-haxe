===================
conditional simple
===================

#if some
#else
#end

---

(module
  (conditional
    condition: (identifier)
    (conditional_else)
    (conditional_end)))

=====================
conditional advanced
=====================

#if !debug
  trace("ok");
#elseif (debug_level > 3)
  trace(3);
#elseif antoher
  trace("debug level too low");
#error "unsupported"
#end

---

(module
  (conditional
    condition: (identifier)
    consequence: (call_expr
      function: (identifier)
      arguments: (arg_list
        (string
          (fragment))))
    (conditional_elseif
      condition: (binop
        left: (identifier)
        right: (int))
      (call_expr
        function: (identifier)
        arguments: (arg_list
          (int))))
    (conditional_elseif
      condition: (identifier)
      (call_expr
        function: (identifier)
        arguments: (arg_list
          (string
            (fragment)))))
    (conditional_error
      (string
        (fragment)))
    (conditional_end)))

========================
conditional with macros
========================

#if !macro
@:build(my.App.build())
#end
class A {}

---

(module
  (conditional
    condition: (identifier)
    consequence: (metadata
      name: (identifier)
      args: (metadata_args
        (call_expr
          function: (member_expr
            object: (member_expr
              object: (identifier)
              field: (identifier))
            field: (identifier))
          arguments: (arg_list))))
    (conditional_end))
  (class_decl
    name: (identifier)
    (class_body)))
