===================
boolean expressions
===================

true;
false;

---

(module
  (true)
  (false))


===============================================================================
int literals 
===============================================================================

1;
0x00;
1000;
1_000;
1_000_999;
0b00111;

---

(module
  (Int)
  (Int)
  (Int)
  (Int)
  (Int)
  (Int))

===============================================================================
float literals 
===============================================================================

1.0;
1_000.5;
1.0e-3;
1_000.0e1_0;

---

(module
  (Float)
  (Float)
  (Float)
  (Float))

===============
string literals
===============
 
"haxe";
'haxe';

---

(module
  (String
    (fragment))
  (String
    (fragment)))

===============================================================================
strings containing comment-like content literals
===============================================================================

"//ok\n//what";

---

(module
  (String
    (fragment)
    (escape_sequence)
    (fragment)))

===============================================================================
string escape sequence
===============================================================================

"";
'';
"\"";
"a\"b";
'a\'b';
"it's a tiny tiny world";
'"hello"';
'\'hello\'';

---

(module
  (String)
  (String)
  (String
    (escape_sequence))
  (String
    (fragment)
    (escape_sequence)
    (fragment))
  (String
    (fragment)
    (escape_sequence)
    (fragment))
  (String
    (fragment))
  (String
    (fragment))
  (String
    (escape_sequence)
    (fragment)
    (escape_sequence)))

===============================================================================
string line continuations literals
===============================================================================

"hello
world";

"hello

world";

'hello
world';

'hello

world';

---

(module
  (String
    (fragment))
  (String
    (fragment))
  (String
    (fragment))
  (String
    (fragment)))

===============================================================================
string interpolation literals
===============================================================================

'Some $user say';
'My name is ${user.name} and i am';
'1 + 2 = ${1 + 2}';
'${"nested"}';

---

(module
  (String
    (fragment)
    (interpolation
      (identifier))
    (fragment))
  (String
    (fragment)
    (interpolation
      (EField
        object: (identifier)
        name: (identifier)))
    (fragment))
  (String
    (fragment)
    (interpolation
      (EBinop
        left: (Int)
        right: (Int))))
  (String
    (interpolation
      (String
        (fragment)))))

===============================================================================
regular expression literals
===============================================================================

~/haxe/gi;

---

(module
  (Regexp))
